name: publish

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine pytest

      - name: Verify pyproject version matches tag
        run: |
          python - <<'PY'
          import tomllib, sys, os
          with open("pyproject.toml","rb") as f:
              data = tomllib.load(f)
          ver = data["project"]["version"]
          tag = os.environ.get("GITHUB_REF_NAME","")
          if tag.startswith("refs/tags/"):
              tag = tag.split("/",2)[-1]
          if tag.startswith("v"):
              tag = tag[1:]
          if ver != tag:
              print(f"Version mismatch: pyproject.toml version {ver} != tag {tag}", file=sys.stderr)
              sys.exit(1)
          print(f"Version OK: {ver} == tag {tag}")
          PY

      - name: Run tests
        run: python -m pytest -q

      - name: Build packages (sdist + wheel)
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*
